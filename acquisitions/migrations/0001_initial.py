# Generated by Django 3.1.5 on 2021-06-19 11:17

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddVendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Vendor Name')),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('(^|\\D)\\d{6}($|\\D)')], verbose_name='PIN')),
                ('phone', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d')], verbose_name='Phone No.')),
                ('email', models.EmailField(blank=True, help_text='abc@xyz.com', max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Vendor',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(help_text='Enter a book genre (e.g. Science Fiction)', max_length=200, verbose_name='Genre')),
            ],
        ),
        migrations.CreateModel(
            name='BookSuggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the book to suggest', max_length=200, unique=True, verbose_name='Title')),
                ('author', models.CharField(max_length=200, verbose_name='Author')),
                ('publisher', models.CharField(max_length=200, verbose_name='Publisher')),
                ('price', models.PositiveIntegerField(help_text='Estimate price of the book', verbose_name='Price')),
                ('card', models.CharField(max_length=20, verbose_name='User-Card Number')),
                ('genre', models.ManyToManyField(help_text='Select a genre for this book', to='acquisitions.Genre')),
            ],
            options={
                'verbose_name': 'Book Suggestion',
            },
        ),
        migrations.CreateModel(
            name='BookOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='Title')),
                ('author', models.CharField(max_length=200, verbose_name='Author')),
                ('publisher', models.CharField(max_length=200, verbose_name='Publisher')),
                ('cost', models.PositiveIntegerField(help_text='Total cost of order', verbose_name='Cost')),
                ('quantity', models.PositiveIntegerField(verbose_name='Number of units ordered')),
                ('orderDate', models.DateField(default=datetime.date.today, verbose_name='Date of Order')),
                ('orderNo', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]*$')])),
                ('orderStatus', models.CharField(choices=[('Undelivered', 'Undelivered'), ('Delivered', 'Delivered')], default='Undelivered', max_length=50, verbose_name='Order Status')),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='acquisitions.addvendor')),
            ],
            options={
                'verbose_name': 'Book Order',
            },
        ),
    ]
